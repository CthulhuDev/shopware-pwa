name: Deploy to Storefrontcloud
on:
  push:
    branches:
      - feat/hide-theme-and-cloud-deploy
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Build packages
        run: |
          yarn
          yarn build --ci
      - name: Create theme project
        run: |
          mkdir test-project
          cd ./test-project
          ../packages/cli/bin/shopware-pwa init
          yarn build
          cd ../
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: shopware-pwa-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.storefrontcloud.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: ./test-project
          buildoptions: "--compress"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          target-url: https://shopware-pwa.storefrontcloud.io
          environment: production
          initial_status: in_progress
      - name: Deploy on Storefrontcloud.io
        id: farmerApiCall
        run: |
          echo ::set-env name=FARMER_RESPONSE::curl -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} -H 'Content-Type: application/json' -X POST -d '{"code":"shopware-pwa","frontContainerVersion":"${{ github.sha }}"}' https://farmer.storefrontcloud.io/instances
      - name: Update deployment status (success)
        if: success() && contains(${{ env.FARMER_RESPONSE }}, 'Instance updated!')
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target-url: https://shopware-pwa.storefrontcloud.io
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target-url: https://shopware-pwa.storefrontcloud.io
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}